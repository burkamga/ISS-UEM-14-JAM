/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package view.adm;

import control.COMedico;
import control.COSecretaria;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Vomedico;
import model.Vosecretaria;
import view.Secretaria.*;
import view.Login;
import view.TableModelMedico;
import view.TableModelSecretaria;

/**
 *
 * @author Maicon Henrique
 */
public class TelaBuscaRetornaPessoa extends javax.swing.JFrame {

    /**
     * Creates new form TelaSecretaria
     */
    public TelaBuscaRetornaPessoa() {
        initComponents();
        //Oculta Tudo antess da seleção do tipo de usuário
        btBuscaMedico.setVisible(false);
        btSelecionaMedico.setVisible(false);
        btBuscarSecretaria.setVisible(false);
        btSelecionaSecretaria.setVisible(false);

        
    }
    
    private TableModelMedico tbModelMedico;
    private TableModelSecretaria tbModelSec;
    
    private TableModelMedico getTableModel_ID(){
        if(tbModelMedico == null){
            tbModelMedico = new TableModelMedico(criaMedicos_ID());
        }
        return tbModelMedico;
    }
    
    private TableModelSecretaria getTableModel_ID_SEC(){
        if(tbModelSec == null){
            tbModelSec = new TableModelSecretaria(criaSecretarias_ID());
        }
        return tbModelSec;
    }
    
    private TableModelMedico getTableModel_NOME(){
        if(tbModelMedico == null){
            tbModelMedico = new TableModelMedico(criaMedicos_NOME());
        }
        return tbModelMedico;
    }
    
    private TableModelSecretaria getTableModel_NOME_SEC(){
        if(tbModelSec == null){
            tbModelSec = new TableModelSecretaria(criaSecretarias_NOME());
        }
        return tbModelSec;
    }
    
    private List<Vomedico> criaMedicos_ID() {
        List<Vomedico> medicos = new ArrayList<>();
        int i = Integer.parseInt(cmpID.getText().toString());
        Vomedico resultado = COMedico.buscaMedico(i);
        medicos.add(resultado);
        return medicos;
    }
    
    private List<Vosecretaria> criaSecretarias_ID() {
        List<Vosecretaria> secretaria = new ArrayList<>();
        int i = Integer.parseInt(cmpID.getText().toString());
        Vosecretaria resultado = COSecretaria.buscaSecretaria(i);
        secretaria.add(resultado);
        return secretaria;
    }
    
    private List<Vomedico> criaMedicos_NOME() {
        List<Vomedico> medicos = COMedico.buscaMedicosNome(cmpNome.getText());
        return medicos;
    }
    
    private List<Vosecretaria> criaSecretarias_NOME() {
        List<Vosecretaria> secretaria = COSecretaria.buscaSecretariasNome(cmpNome.getText());
        return secretaria;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSelecaoIdNome = new javax.swing.ButtonGroup();
        bgSelecaoTipoCadastro = new javax.swing.ButtonGroup();
        txBuscaPessoa = new javax.swing.JLabel();
        BuscarPessoa = new javax.swing.JPanel();
        txNome = new javax.swing.JLabel();
        cmpNome = new javax.swing.JTextField();
        btBuscarSecretaria = new javax.swing.JButton();
        btLimparcampos = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        cmpID = new javax.swing.JTextField();
        txID = new javax.swing.JLabel();
        rbId = new javax.swing.JRadioButton();
        rbNome = new javax.swing.JRadioButton();
        txBuscaIdNome = new javax.swing.JLabel();
        txSelecionaTipoCadastro = new javax.swing.JLabel();
        rbSecretaria = new javax.swing.JRadioButton();
        rbMedico = new javax.swing.JRadioButton();
        btBuscaMedico = new javax.swing.JButton();
        btSelecionaSecretaria = new javax.swing.JButton();
        btSelecionaMedico = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        spTabelaMedicos = new javax.swing.JScrollPane();
        tbResultadosMed = new javax.swing.JTable();
        spTabelaSecretarias = new javax.swing.JScrollPane();
        tbResultadosSec = new javax.swing.JTable();
        MenuPrincipal = new javax.swing.JMenuBar();
        mnCadastrar = new javax.swing.JMenu();
        smnMedico = new javax.swing.JMenuItem();
        smnSecretaria = new javax.swing.JMenuItem();
        mnBuscar = new javax.swing.JMenu();
        smnBCadastro = new javax.swing.JMenuItem();
        mnSistema = new javax.swing.JMenu();
        smnLogoff = new javax.swing.JMenuItem();
        smnSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ARS System");

        txBuscaPessoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txBuscaPessoa.setText("Buscar Cadastro");

        txNome.setText("Nome:");

        cmpNome.setMinimumSize(new java.awt.Dimension(60, 200));

        btBuscarSecretaria.setText("Buscar Secretária");
        btBuscarSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarSecretariaActionPerformed(evt);
            }
        });

        btLimparcampos.setText("Limpar Campos");
        btLimparcampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparcamposActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        cmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpIDActionPerformed(evt);
            }
        });

        txID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txID.setText("ID:");

        bgSelecaoIdNome.add(rbId);
        rbId.setText("ID");

        bgSelecaoIdNome.add(rbNome);
        rbNome.setText("Nome");

        txBuscaIdNome.setText("Buscar por:");

        txSelecionaTipoCadastro.setText("Selecione o Tipo de Cadastro:");

        bgSelecaoTipoCadastro.add(rbSecretaria);
        rbSecretaria.setText("Secretária");
        rbSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSecretariaActionPerformed(evt);
            }
        });

        bgSelecaoTipoCadastro.add(rbMedico);
        rbMedico.setText("Médico");
        rbMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMedicoActionPerformed(evt);
            }
        });

        btBuscaMedico.setAction(btBuscaMedico.getAction());
        btBuscaMedico.setText("Buscar Médico");
        btBuscaMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaMedicoActionPerformed(evt);
            }
        });

        btSelecionaSecretaria.setText("Selecionar Secretária");
        btSelecionaSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionaSecretariaActionPerformed(evt);
            }
        });

        btSelecionaMedico.setText("Selecionar Médico");
        btSelecionaMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionaMedicoActionPerformed(evt);
            }
        });

        tbResultadosMed.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        spTabelaMedicos.setViewportView(tbResultadosMed);

        spTabelaSecretarias.setViewportView(tbResultadosSec);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spTabelaMedicos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spTabelaSecretarias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTabelaMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTabelaSecretarias, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BuscarPessoaLayout = new javax.swing.GroupLayout(BuscarPessoa);
        BuscarPessoa.setLayout(BuscarPessoaLayout);
        BuscarPessoaLayout.setHorizontalGroup(
            BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BuscarPessoaLayout.createSequentialGroup()
                        .addComponent(txSelecionaTipoCadastro)
                        .addGap(8, 8, 8)
                        .addComponent(rbSecretaria)
                        .addGap(18, 18, 18)
                        .addComponent(rbMedico))
                    .addGroup(BuscarPessoaLayout.createSequentialGroup()
                        .addComponent(txBuscaIdNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNome))
                    .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BuscarPessoaLayout.createSequentialGroup()
                            .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(BuscarPessoaLayout.createSequentialGroup()
                                    .addComponent(txID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txNome))
                                .addComponent(btBuscarSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(BuscarPessoaLayout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(btBuscaMedico)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btLimparcampos)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btCancelar))
                                .addGroup(BuscarPessoaLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cmpNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BuscarPessoaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSelecionaSecretaria, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btSelecionaMedico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );
        BuscarPessoaLayout.setVerticalGroup(
            BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarPessoaLayout.createSequentialGroup()
                .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txSelecionaTipoCadastro)
                    .addComponent(rbSecretaria)
                    .addComponent(rbMedico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbId)
                    .addComponent(rbNome)
                    .addComponent(txBuscaIdNome))
                .addGap(8, 8, 8)
                .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txID)
                    .addComponent(cmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmpNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txNome))
                .addGap(18, 18, 18)
                .addGroup(BuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBuscarSecretaria)
                    .addComponent(btBuscaMedico)
                    .addComponent(btLimparcampos)
                    .addComponent(btCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSelecionaSecretaria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSelecionaMedico)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnCadastrar.setText("Cadastrar");
        mnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCadastrarActionPerformed(evt);
            }
        });

        smnMedico.setText("Médico");
        smnMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smnMedicoActionPerformed(evt);
            }
        });
        mnCadastrar.add(smnMedico);

        smnSecretaria.setText("Secretária");
        smnSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smnSecretariaActionPerformed(evt);
            }
        });
        mnCadastrar.add(smnSecretaria);

        MenuPrincipal.add(mnCadastrar);

        mnBuscar.setText("Buscar");

        smnBCadastro.setText("Cadastro");
        smnBCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smnBCadastroActionPerformed(evt);
            }
        });
        mnBuscar.add(smnBCadastro);

        MenuPrincipal.add(mnBuscar);

        mnSistema.setText("Sistema");

        smnLogoff.setText("Logoff");
        smnLogoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smnLogoffActionPerformed(evt);
            }
        });
        mnSistema.add(smnLogoff);

        smnSair.setText("Sair");
        smnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smnSairActionPerformed(evt);
            }
        });
        mnSistema.add(smnSair);

        MenuPrincipal.add(mnSistema);

        setJMenuBar(MenuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txBuscaPessoa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(BuscarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txBuscaPessoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BuscarPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void smnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_smnSairActionPerformed

    private void smnLogoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smnLogoffActionPerformed
       Login TelaLogin = new Login();
       TelaLogin.setLocationRelativeTo(null);
       TelaLogin.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_smnLogoffActionPerformed

    private void smnMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smnMedicoActionPerformed
        TelaAddMedico TelaAddMedico = new TelaAddMedico();
        TelaAddMedico.setLocationRelativeTo(null);
        TelaAddMedico.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_smnMedicoActionPerformed

    private void smnSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smnSecretariaActionPerformed
        TelaAddSecretaria TelaAddSec = new TelaAddSecretaria();
        TelaAddSec.setLocationRelativeTo(null);
        TelaAddSec.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_smnSecretariaActionPerformed

    private void mnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCadastrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnCadastrarActionPerformed

    private void smnBCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smnBCadastroActionPerformed
        TelaBuscaRetornaPessoa TelaBuscaPessoa = new TelaBuscaRetornaPessoa();
        TelaBuscaPessoa.setLocationRelativeTo(null);
        TelaBuscaPessoa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_smnBCadastroActionPerformed

    private void btSelecionaMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionaMedicoActionPerformed
        int indiceLinha = tbResultadosMed.getSelectedRow();
        //Verifica Linha Selecionada
        if(indiceLinha != -1){
            Vomedico selectedMedico = tbModelMedico.getMedico(indiceLinha);
            TelaAttMedico NovaTelaAttMedico = new TelaAttMedico(selectedMedico);
            NovaTelaAttMedico.setLocationRelativeTo(null);
            NovaTelaAttMedico.setVisible(true);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione ao menos um Médico!", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btSelecionaMedicoActionPerformed

    private void btSelecionaSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionaSecretariaActionPerformed
        int indiceLinha = tbResultadosSec.getSelectedRow();
        //Verifica Linha Selecionada
        if(indiceLinha != -1){
            Vosecretaria selectedSecretaria = tbModelSec.getSecretaria(indiceLinha);
            TelaAttSecretaria NovaTelaAttSecretaria = new TelaAttSecretaria(selectedSecretaria);
            NovaTelaAttSecretaria.setLocationRelativeTo(null);
            NovaTelaAttSecretaria.setVisible(true);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione ao menos uma Secretária!", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btSelecionaSecretariaActionPerformed

    private void btBuscaMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaMedicoActionPerformed
        if(rbId.isSelected()){
            String vid = "";
            if((vid).equals(cmpID.getText())){
                JOptionPane.showMessageDialog(rootPane, "O Campo ID não pode ser Vazio!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            }else{
                //Seta o TableModel 
                tbResultadosMed.setModel(getTableModel_ID());
                tbModelMedico.limpar();
                tbModelMedico.addListaDeMedicos(criaMedicos_ID());
                if(criaMedicos_ID() != null){
                    spTabelaMedicos.setVisible(true);
                    tbResultadosMed.setVisible(true);
                    revalidate();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "O Médico não Encontrado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                }
                
                
            }
            
        }else{
            if(rbNome.isSelected()){
                tbResultadosMed.setModel(getTableModel_NOME());
                tbModelMedico.limpar();
                tbModelMedico.addListaDeMedicos(criaMedicos_NOME());
                if(tbModelMedico.getValueAt(0, 0) == null){
                    JOptionPane.showMessageDialog(rootPane, "O Médico não Encontrado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    spTabelaMedicos.setVisible(true);
                    tbResultadosMed.setVisible(true);
                    revalidate();
                    revalidate();
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Escolha entre ID ou NOME para Buscar!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            }
            
        }
   
    }//GEN-LAST:event_btBuscaMedicoActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        TelaAdm VoltaTela = new TelaAdm();
        VoltaTela.setLocationRelativeTo(null);
        VoltaTela.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btLimparcamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparcamposActionPerformed
        cmpID.setText(null);
        cmpNome.setText(null);
        revalidate();
    }//GEN-LAST:event_btLimparcamposActionPerformed

    private void btBuscarSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarSecretariaActionPerformed
        if(rbId.isSelected()){
            String vid = "";
            if((vid).equals(cmpID.getText())){
                JOptionPane.showMessageDialog(rootPane, "O Campo ID não pode ser Vazio!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            }else{
                //Seta o TableModel 
                tbResultadosSec.setModel(getTableModel_ID_SEC());
                tbModelSec.limpar();
                tbModelSec.addListaDeSecretarias(criaSecretarias_ID());
                if(criaSecretarias_ID() != null){
                    spTabelaSecretarias.setVisible(true);
                    tbResultadosSec.setVisible(true);
                    revalidate();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Secretária não Encontrada!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                }

            }
            
        }else{
            if(rbNome.isSelected()){
                tbResultadosSec.setModel(getTableModel_NOME_SEC());
                tbModelSec.limpar();
                tbModelSec.addListaDeSecretarias(criaSecretarias_NOME());
                if(tbModelSec.getValueAt(0, 0) == null){
                    JOptionPane.showMessageDialog(rootPane, "Secretária não Encontrada!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    spTabelaSecretarias.setVisible(true);
                    tbResultadosSec.setVisible(true);
                    revalidate();
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Escolha entre ID ou NOME para Buscar!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_btBuscarSecretariaActionPerformed

    private void rbSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSecretariaActionPerformed
        //Oculta Coisa dos Médicos
        btBuscaMedico.setVisible(false);
        btSelecionaMedico.setVisible(false);
        spTabelaMedicos.setVisible(false);
        
        //Mostra Coisas Secretária
        btBuscarSecretaria.setVisible(true);
        btSelecionaSecretaria.setVisible(true);
        revalidate();
    }//GEN-LAST:event_rbSecretariaActionPerformed

    private void rbMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMedicoActionPerformed
        //Mostra Coisa dos Médicos
        btBuscaMedico.setVisible(true);
        btSelecionaMedico.setVisible(true);       
        
        //Oculta Coisas Secretária
        btBuscarSecretaria.setVisible(false);
        btSelecionaSecretaria.setVisible(false);
        spTabelaSecretarias.setVisible(false);
        revalidate();
    }//GEN-LAST:event_rbMedicoActionPerformed

    private void cmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpIDActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
    
 
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBuscaRetornaPessoa().setVisible(true);
            }
        }); 
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BuscarPessoa;
    private javax.swing.JMenuBar MenuPrincipal;
    private javax.swing.ButtonGroup bgSelecaoIdNome;
    private javax.swing.ButtonGroup bgSelecaoTipoCadastro;
    private javax.swing.JButton btBuscaMedico;
    private javax.swing.JButton btBuscarSecretaria;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btLimparcampos;
    private javax.swing.JButton btSelecionaMedico;
    private javax.swing.JButton btSelecionaSecretaria;
    private javax.swing.JTextField cmpID;
    private javax.swing.JTextField cmpNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenu mnBuscar;
    private javax.swing.JMenu mnCadastrar;
    private javax.swing.JMenu mnSistema;
    private javax.swing.JRadioButton rbId;
    private javax.swing.JRadioButton rbMedico;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JRadioButton rbSecretaria;
    private javax.swing.JMenuItem smnBCadastro;
    private javax.swing.JMenuItem smnLogoff;
    private javax.swing.JMenuItem smnMedico;
    private javax.swing.JMenuItem smnSair;
    private javax.swing.JMenuItem smnSecretaria;
    private javax.swing.JScrollPane spTabelaMedicos;
    private javax.swing.JScrollPane spTabelaSecretarias;
    private javax.swing.JTable tbResultadosMed;
    private javax.swing.JTable tbResultadosSec;
    private javax.swing.JLabel txBuscaIdNome;
    private javax.swing.JLabel txBuscaPessoa;
    private javax.swing.JLabel txID;
    private javax.swing.JLabel txNome;
    private javax.swing.JLabel txSelecionaTipoCadastro;
    // End of variables declaration//GEN-END:variables

}
